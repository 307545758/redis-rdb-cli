#
# This parameter used in `rmt` command.
# `rmt -s ./dump.rdb -m redis://127.0.0.1:6380`
# Above command using redis's `pipeline` to batch send 4096 commands to target redis
#
# If set `migrate_batch_size=1` means send every command and then synchronize wait the sending result.
#
migrate_batch_size=4096

#
# This parameter used in `rmt` command.
# `rmt -s ./dump.rdb -m redis://127.0.0.1:6380`
# Above command will open  `migrate_thread_size`'s socket to async migrating data to target redis.
#
# This parameter MUST be power of 2
#
migrate_thread_size=4

#
# This parameter used in `rmt` command.
# `rmt -s ./dump.rdb -m redis://127.0.0.1:6380`
# If failed to sync data to target redis. the `rmt` command will retry `migrate_retry_time` to sync data to target redis.
#
migrate_retry_time=1

#
# This parameter used in `rct -f resp` command.
# `rct -f resp -s ./dump.rdb -o ./appendonly.aof`
# Above command convert `set`, `list`, `hash` and `zset` type to aof command with 128 elements.
#
# If set `batch_size=1` means convert above types to aof command with only 1 elements.
#
batch_size=128

#
# This parameter used in `rct -f dump`, `rct -f diff`, `rmt`
# The generated dump aof use `dump_rdb_version` as RDB version
# `dump_rdb_version=-1` means use source RDB version.
#
# Redis-5.x : `dump_rdb_version=9`
# Redis-4.x : `dump_rdb_version=8`
# Redis-3.2 : `dump_rdb_version=7`
# Redis-3.0 : `dump_rdb_version=6`
# Redis-2.8 : `dump_rdb_version=6`
# Redis-2.6 : `dump_rdb_version=6`
#
dump_rdb_version=-1

#
# This parameter used in `rct` like the following
# `rct -f keyval -s ./dump.rdb -o ./keyval.csv`
# The file `keyval.csv` will be split by <delimiter>. by default the delimiter is `,`
#
delimiter=\u002C

#
# This parameter used in `rct` like the following
# `rct -f keyval -s ./dump.rdb -o ./keyval.csv`
# The file `keyval.csv` will be quote by <quote>. by default the quote is `"`
#
quote=\u0022

#
# Socket parameter
# Used in connection timeout and read timeout
# This parameter MUST greater than redis server's `repl-ping-slave-period`
#
timeout=30000

#
# Socket parameter
# SO_SNDBUF
# More details please refer to https://www.psc.edu/index.php/networking/641-tcp-tune
#
# `snd_buf=0` means use system default value
#
snd_buf=0

#
# Socket parameter
# SO_RCVBUF
# More details please refer to https://www.psc.edu/index.php/networking/641-tcp-tune
#
# `rcv_buf=0` means use system default value
#
rcv_buf=0

#
# This parameter will buffered the sent data and the received data to speed up socket performance.
# By default the value is `8KB`
#
buffer_size=8192

#
# If source is remote redis uri like the following
# rmt -s redis://host:port ...
# rct -s redis://host:port ...
# rdt -b redis://host:port ...
# The `heartbeat=1000` means every 1 second the `redis-cli-tool`
# will send ping message to remote redis uri to keep connection alive
#
heartbeat=1000

#
# If source is remote redis uri like the following
# rmt -s redis://host:port ...
# rct -s redis://host:port ...
# rdt -b redis://host:port ...
# The `retries=5` means when disconnect with redis server.
# The `redis-cli-tool` will retry to connect to remote redis uri to try `psync` process.
# No longer try to reconnect when 5 consecutive failures.
#
retries=5

#
# This parameter is used in conjunction with the `retry_time`
# Before try to reconnect. the `redis-cli-tool` will sleep `retry_interval` and then to try reconnect to redis.
# By default the value is 1 second.
#
retry_interval=1000

#
# If source is remote redis uri like the following
# rmt -s redis://host:port ...
# rct -s redis://host:port ...
# rdt -b redis://host:port ...
#
# The `redis-cli-tool` will use an async input stream to speed up socket performance. by default the value is `512KB`
#
async_cache_size=524288

